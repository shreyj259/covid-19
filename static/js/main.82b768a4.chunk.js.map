{"version":3,"sources":["components/images sync /^/meme/-.*/.jpg$","components/images/meme-1.jpg","components/images/meme-10.jpg","components/images/meme-11.jpg","components/images/meme-12.jpg","components/images/meme-13.jpg","components/images/meme-14.jpg","components/images/meme-15.jpg","components/images/meme-16.jpg","components/images/meme-17.jpg","components/images/meme-18.jpg","components/images/meme-19.jpg","components/images/meme-2.jpg","components/images/meme-20.jpg","components/images/meme-21.jpg","components/images/meme-22.jpg","components/images/meme-23.jpg","components/images/meme-24.jpg","components/images/meme-25.jpg","components/images/meme-3.jpg","components/images/meme-4.jpg","components/images/meme-5.jpg","components/images/meme-6.jpg","components/images/meme-7.jpg","components/images/meme-8.jpg","components/images/meme-9.jpg","api/index.js","components/cards.js","components/stateSelector.js","components/chart.js","components/memeComponent.js","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","url","fetchData","a","axios","get","statewise","data","fetchChartData","cases_time_series","Cards","selectedData","confirmed","Grid","container","spacing","justify","item","align","xs","style","backgroundColor","color","padding","paddingTop","Typography","variant","component","Card","md","margin","borderBottom","CardContent","gutterBottom","start","end","duration","separator","deltaconfirmed","active","recovered","deltarecovered","deaths","deltadeaths","lastupdatedtime","ChoseState","handleChange","FormControl","NativeSelect","defaultValue","onChange","target","value","obj","i","key","state","Charts","useState","setSelectedData","useEffect","fetchApi","lineChart","labels","date","datasets","dailyconfirmed","label","borderColor","borderWidth","fill","pointRadius","dailyrecovered","dailydeceased","options","scales","xAxes","ticks","autoSkip","maxTicksLimit","numArray","myArray","push","createArray","randomGenerator","length","randomIndex","min","max","temp","temp2","Math","random","floor","getRandomNumber","randomNumber","splice","Meme","setRandom","Button","marginTop","onClick","src","require","alt","width","Fragment","App","filter","setState","fetchedData","total","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82b768a4.chunk.js","sourcesContent":["var map = {\n\t\"./meme-1.jpg\": 207,\n\t\"./meme-10.jpg\": 208,\n\t\"./meme-11.jpg\": 209,\n\t\"./meme-12.jpg\": 210,\n\t\"./meme-13.jpg\": 211,\n\t\"./meme-14.jpg\": 212,\n\t\"./meme-15.jpg\": 213,\n\t\"./meme-16.jpg\": 214,\n\t\"./meme-17.jpg\": 215,\n\t\"./meme-18.jpg\": 216,\n\t\"./meme-19.jpg\": 217,\n\t\"./meme-2.jpg\": 218,\n\t\"./meme-20.jpg\": 219,\n\t\"./meme-21.jpg\": 220,\n\t\"./meme-22.jpg\": 221,\n\t\"./meme-23.jpg\": 222,\n\t\"./meme-24.jpg\": 223,\n\t\"./meme-25.jpg\": 224,\n\t\"./meme-3.jpg\": 225,\n\t\"./meme-4.jpg\": 226,\n\t\"./meme-5.jpg\": 227,\n\t\"./meme-6.jpg\": 228,\n\t\"./meme-7.jpg\": 229,\n\t\"./meme-8.jpg\": 230,\n\t\"./meme-9.jpg\": 231\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 206;","module.exports = __webpack_public_path__ + \"static/media/meme-1.37031883.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-10.03abe672.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-11.ec547531.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-12.bbfae18c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-13.3713f041.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-14.968f3468.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-15.4c0b05c0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-16.4e824af5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-17.5482ea9f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-18.1899340e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-19.30c667dc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-2.76ad5e4a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-20.77e4a5ce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-21.ff201f71.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-22.4be50509.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-23.4d6a4801.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-24.dc616bf9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-25.f05af915.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-3.eefb2ce1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-4.0f7acc76.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-5.c2547a2d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-6.de764a8f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-7.f0f46971.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-8.fe12637a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-9.cb9f9e5d.jpg\";","import axios from 'axios';\r\nconst url='https://api.covid19india.org/data.json';\r\n\r\nexport const fetchData= async ()=>{\r\n    try {\r\n        const {data:{statewise}} = await axios.get(url);\r\n        return statewise;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchChartData= async()=>{\r\n    try {\r\n        const {data:{cases_time_series}}=await axios.get(url);\r\n        return cases_time_series;\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React from \"react\";\r\nimport CountUp from \"react-countup\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\n\r\nconst Cards = ({ selectedData }) => {\r\n  if (!selectedData.confirmed) {\r\n    return <h1>LOADING</h1>;\r\n  }\r\n\r\n\r\n  return (\r\n    <div>  \r\n      <Grid container spacing={3} justify=\"center\"> \r\n      <Grid item align=\"center\" xs={12} style={{backgroundColor:\"#8290C3\",color:\"white\",padding:\"1%\",paddingTop:\"2%\"}}>\r\n        <Typography  variant=\"h5\">COVID-19 INDIA TRACKER</Typography>\r\n        <Typography  variant=\"h6\">THAT MAKES YOU SMILE</Typography>\r\n        </Grid> \r\n       <Grid item component={Card} xs={12} md={2} style={{margin:\"2% 3%\",borderBottom:\"5px solid #ff1a1a\"}} >\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\" variant=\"h5\" gutterBottom>Total Infected</Typography>\r\n          <Typography gutterBottom>\r\n            <CountUp\r\n              start={0}\r\n              end={selectedData.confirmed}\r\n              duration={2.75}\r\n              separator=\",\"\r\n            />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\"  gutterBottom>New Cases</Typography>\r\n          <Typography gutterBottom>\r\n            <CountUp\r\n              start={0}\r\n              end={selectedData.deltaconfirmed}\r\n              duration={2.75}\r\n              separator=\",\"\r\n            />\r\n            </Typography>\r\n            <Typography variant=\"body2\">Number of Cases Of Covid-19</Typography>\r\n        </CardContent>\r\n       </Grid>\r\n       <Grid item component={Card} xs={12} md={2} style={{margin:\"2% 3%\",borderBottom:\"5px solid #1a75ff\"}}>\r\n        <CardContent>\r\n        <Typography color=\"textSecondary\" variant=\"h5\" gutterBottom>Total Active</Typography>\r\n          <Typography gutterBottom>\r\n            <CountUp\r\n              start={0}\r\n              end={selectedData.active}\r\n              duration={2.75}\r\n              separator=\",\"\r\n            />\r\n          </Typography>\r\n          <Typography variant=\"body2\" >Number of Active Cases Of Covid-19</Typography>\r\n        </CardContent>\r\n       </Grid>\r\n      <Grid item component={Card} xs={12} md={2} style={{margin:\"2% 3%\",borderBottom:\"5px solid #00ff00\"}}>\r\n        <CardContent>\r\n        <Typography color=\"textSecondary\" variant=\"h5\" gutterBottom>Total Recovered</Typography>\r\n          <Typography gutterBottom>\r\n            <CountUp\r\n              start={0}\r\n              end={selectedData.recovered}\r\n              duration={2.75}\r\n              separator=\",\"\r\n            />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\" gutterBottom>Today's Recovery</Typography>\r\n          <Typography gutterBottom>\r\n            <CountUp\r\n              start={0}\r\n              end={selectedData.deltarecovered}\r\n              duration={2.75}\r\n              separator=\",\"\r\n            />\r\n            </Typography>\r\n            <Typography variant=\"body2\">Number of Recovered cases of Covid-19</Typography>\r\n        </CardContent>\r\n      </Grid>\r\n      <Grid item component={Card} xs={12} md={2} style={{margin:\"2% 3%\",borderBottom:\"5px solid #8c8c8c\"}}>\r\n        <CardContent>\r\n        <Typography color=\"textSecondary\" variant=\"h5\" gutterBottom>Deceased</Typography>\r\n          <Typography gutterBottom>\r\n            <CountUp\r\n              start={0}\r\n              end={selectedData.deaths}\r\n              duration={2.75}\r\n              separator=\",\"\r\n            />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\" gutterBottom>Deaths Today</Typography>\r\n          <Typography gutterBottom>\r\n            <CountUp\r\n              start={0}\r\n              end={selectedData.deltadeaths}\r\n              duration={2.75}\r\n              separator=\",\"\r\n            />\r\n            </Typography>\r\n            <Typography variant=\"body2\" >Number of Deaths Caused By Covid-19</Typography>\r\n        </CardContent>\r\n      </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3} justify=\"center\"> \r\n      <Typography variant=\"h6\" color=\"textSecondary\" style={{margin:\"3%\"}}>Last Updated: {selectedData.lastupdatedtime}</Typography>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport {NativeSelect,FormControl,Grid} from '@material-ui/core'\r\n\r\nconst ChoseState=({handleChange,data})=>{\r\n    return(\r\n        <Grid container justify=\"center\">\r\n        <FormControl style={{margin:\"1%\"}} >\r\n        <NativeSelect defaultValue=\"Total\" onChange={(e)=>handleChange(e.target.value)}>\r\n        {data.map((obj,i)=><option key={i}>{obj.state}</option>)}\r\n        </NativeSelect>\r\n        </FormControl>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nexport default ChoseState;","import React,{useEffect,useState} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport {fetchChartData} from '../api/index';\r\nimport {Grid} from '@material-ui/core';\r\n\r\nconst Charts=()=>{\r\n    const [selectedData,setSelectedData]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchApi=async ()=>{\r\n            setSelectedData(await fetchChartData());\r\n        }\r\n        fetchApi();\r\n    });\r\n    \r\n    const lineChart=(\r\n        selectedData[0]? (\r\n            <Line\r\n            data={{\r\n              labels: selectedData.map(obj=>obj.date),\r\n              datasets:[{\r\n                  data:selectedData.map(obj=>obj.dailyconfirmed),\r\n                  label:\"Infected\",\r\n                  borderColor:'#ff1a1a',\r\n                  backgroundColor:\"rgba(255,0,0,0.2)\",\r\n                  borderWidth:2,\r\n                  fill:true,\r\n                  pointRadius:1\r\n              },\r\n              {\r\n                  data:selectedData.map(obj=>obj.dailyrecovered),\r\n                  label:\"Recovered\",\r\n                  borderColor:\"#00ff00\",\r\n                  backgroundColor:\"rgba(0,255,0,0.2)\",\r\n                  borderWidth:2,\r\n                  fill:true,\r\n                  pointRadius:1\r\n              },\r\n              {\r\n                  data:selectedData.map(obj=>obj.dailydeceased),\r\n                  label:\"Deaths\",\r\n                  borderColor:\"#8c8c8c\",\r\n                  backgroundColor:\"rgba(0,0,0,0.2)\",\r\n                  borderWidth:2,\r\n                  fill:true,\r\n                  pointRadius:1\r\n              }]\r\n          }} \r\n          options={{\r\n            scales: {\r\n                xAxes: [{\r\n                  ticks: {\r\n                    autoSkip: true,\r\n                    maxTicksLimit: 25\r\n                   }\r\n                 }]\r\n                }\r\n          }}\r\n          />\r\n        ):null\r\n    )\r\n\r\n    return (<Grid container justify=\"center\">\r\n             <Grid item xs={12} md={10} align=\"center\">\r\n            {lineChart}\r\n            </Grid>\r\n            </Grid>)\r\n}\r\n\r\nexport default Charts;","import React,{useState} from 'react';\r\nimport {Grid,Button,Typography} from '@material-ui/core';\r\n\r\nconst createArray=(start,end)=>{\r\n    let myArray=[];\r\n    for(let i=start;i<=end;i++){\r\n        myArray.push(i);\r\n    }\r\n    return myArray;\r\n} \r\n\r\nvar numArray=createArray(1,24);\r\n\r\n\r\nfunction getRandomNumber(min,max){\r\n    let temp= max-min +1;\r\n    let temp2 =Math.random()*temp;\r\n    let result=Math.floor(temp2)+min;\r\n    return result;\r\n}\r\n\r\n\r\n\r\nconst randomGenerator=()=>{\r\n    if(numArray.length<=0)\r\n    return -1;\r\n    let randomIndex=getRandomNumber(0,numArray.length-1);\r\n    let randomNumber=numArray[randomIndex];\r\n    numArray.splice(randomIndex,1);\r\n    return randomNumber;\r\n}\r\n\r\nconst Meme=()=>{\r\n\r\nconst [random,setRandom]=useState(0);\r\n\r\nconst handleClick=()=>{\r\n    setRandom(randomGenerator());\r\n}\r\n\r\nconst print=()=>  {   if(random!=-1)\r\n               {return <img src={require(`./images/meme-${random+1}.jpg`)} alt={`meme-${random+1}`} style={{width:\"80%\",margin:\"3%\"}}/>}\r\n    else\r\n    {return (<React.Fragment>\r\n            <Typography variant='h2' color=\"secondary\" style={{margin:\"20px\"}}>Memes Over !!</Typography>\r\n             <Typography variant='h4' color='primary' style={{margin:\"5px\"}}>Stay Home Stay Safe!!</Typography>\r\n             </React.Fragment>\r\n    )}\r\n}\r\n    return(\r\n        <Grid container justify=\"center\" spacing={3}>\r\n        <Grid align=\"center\">\r\n                <Button align=\"center\" variant=\"contained\" color=\"secondary\" style={{marginTop:\"3%\"}} onClick={handleClick}>Click here to smile once again</Button>\r\n               {print()}\r\n        </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Meme;","import React from 'react';\r\nimport {fetchData} from './api/index';\r\nimport Cards from './components/cards';\r\nimport ChoseState from './components/stateSelector.js';\r\nimport Charts from './components/chart';\r\nimport Meme from './components/memeComponent';\r\n\r\nclass App extends React.Component{\r\n    state={\r\n        data:[],\r\n        selectedData:{}\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData=await fetchData();\r\n        if(fetchedData)\r\n        {const total=fetchedData.filter(obj=>obj.state===\"Total\");\r\n        this.setState({\r\n            data:fetchedData,\r\n            selectedData:total[0]\r\n        });}\r\n\r\n    }\r\n\r\n    handleChange=(state)=>{\r\n        const selectedData=this.state.data.filter(obj=>obj.state===state);\r\n        this.setState({\r\n            selectedData:selectedData[0]\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Cards selectedData={this.state.selectedData}/>\r\n                <ChoseState  handleChange={this.handleChange} data={this.state.data}/>\r\n                <Charts />\r\n                <Meme/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/> ,document.getElementById('root'));"],"sourceRoot":""}